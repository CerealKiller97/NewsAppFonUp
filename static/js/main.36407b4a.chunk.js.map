{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Search.jsx","components/NewsCard.jsx","services/index.js","components/Loading.jsx","views/Home.jsx","views/About.jsx","views/Article.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Fragment","Navbar","color","dark","expand","NavbarBrand","tag","Link","to","Nav","navbar","className","NavItem","NavLink","Footer","year","Date","getFullYear","Search","props","_useState","useState","_useState2","Object","slicedToArray","term","setTerm","articles","Form","FormGroup","Input","type","name","placeholder","onChange","e","preventDefault","target","value","searchTerm","toLowerCase","filter","article","title","includes","filterData","NewsCard","_props$article","id","urlToImage","Card","CardImg","top","width","src","alt","CardBody","CardTitle","Button","concat","http","axios","create","baseURL","process","headers","content-type","accept","Loading","Spinner","style","height","Home","setArticles","fetchData","_ref","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","get","sent","data","results","stop","apply","this","arguments","useEffect","newsList","map","components_NewsCard","key","components_Search","length","components_Loading","About","Jumbotron","Article","match","params","setArticle","getArticle","response","_x","content","author","publishedAt","Container","Breadcrumb","BreadcrumbItem","active","renderArticle","App","react_router_dom","components_Header","Row","Col","sm","md","size","offset","react_router","path","exact","component","components_Footer","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.36407b4a.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  Navbar,\n  NavbarBrand,\n  NavItem,\n  Nav,\n  NavLink\n} from 'reactstrap'\n\nconst Header = () => {\n  return (\n    <>\n      <Navbar color=\"danger\" dark expand=\"md\">\n        <NavbarBrand tag={Link} to=\"/\">News App</NavbarBrand>\n        <Nav navbar className=\"ml-auto\">\n          <NavItem>\n            <NavLink \n              tag={Link}\n              to=\"/home\"\n            >Home</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              tag={Link}\n              to=\"/about\"\n            >About</NavLink>\n          </NavItem>\n        </Nav>\n      </Navbar>\n    </>\n  )\n}\n\nexport default Header","import React from 'react'\nimport { Navbar, Nav } from 'reactstrap'\n\nconst Footer = () => {\n  const year = new Date().getFullYear()\n  return (\n    <>\n      <Navbar\n        color=\"danger\"\n        dark\n        expand=\"md\"\n      >\n        <Nav\n          navbar\n          className=\"ml-auto\"\n        >\n          <small className=\"text-white\">Copyright {year}</small>\n        </Nav>\n      </Navbar>\n    </>\n  )\n}\n\nexport default Footer\n","import React, { useState } from 'react';\n\nimport {\n  Form,\n  FormGroup,\n  Input\n} from 'reactstrap'\n\nconst Search = props => {\n  const [term, setTerm] = useState('')\n  const articles = props.articles\n  \n  const filterData = e => {\n    e.preventDefault()\n    setTerm(e.target.value)\n    const searchTerm = term.toLowerCase()\n    \n    const filteredArticles = articles.filter(article => {\n      return article.title.toLowerCase().includes(searchTerm)\n    })\n\n    // passing data to Home component left (children to parent communication)\n    return filteredArticles\n  }\n\n  return (\n    <div className=\"my-3\">\n      <Form>\n        <FormGroup>\n          <Input \n            type=\"text\"\n            name=\"term\"\n            placeholder=\"Search news...\"\n            onChange={e => filterData(e)}\n          />\n        </FormGroup>\n      </Form>\n    </div>\n  )\n}\n\nexport default Search\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Card,\n  CardImg,\n  CardBody,\n  CardTitle,\n  Button\n} from 'reactstrap'\n\nconst NewsCard = props => {\n  const { id, title, urlToImage } = props.article\n  return (\n    <>\n      <Card className=\"my-4\">\n        <CardImg\n          top\n          width=\"100%\"\n          src={urlToImage}\n          alt={title}\n        />\n        <CardBody>\n          <CardTitle>{title}</CardTitle>\n          <Button \n            color=\"danger\"\n            tag={Link}\n            to={`/article/${id}`}>Read More</Button>\n        </CardBody>\n      </Card>\n    </>\n  )\n}\n\nNewsCard.propTypes = {\n article: PropTypes.object.isRequired\n}\n\nexport default NewsCard","import axios from 'axios'\n\nconst options = {\n  baseURL: process.env.REACT_APP_API_ENDPOINT,\n  headers: {\n    'content-type': 'application/json',\n    accept: 'application/json'\n  }\n}\n\nconst http = axios.create(options)\n\nexport default http\n","import React from 'react'\n\nimport { Spinner } from 'reactstrap'\n\nconst Loading = () => {\n  return (\n    <>\n      <Spinner\n        style={{ width: '10rem', height: '10rem' }}\n        type=\"grow\"\n        color=\"light\"\n      />\n    </>\n  )\n}\n\nexport default Loading\n","import React, { useState, useEffect } from 'react'\n\nimport Search from '../components/Search'\nimport NewsCard from '../components/NewsCard'\n\nimport http from '../services';\nimport Loading from '../components/Loading';\n\nconst Home = () => {\n  const [articles, setArticles] = useState([])\n\n  const fetchData = async () => {\n    const res = await http.get('/news')\n    setArticles(res.data.results)\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n  const newsList = articles.map(article => <NewsCard article={article} key={article.id} />)\n\n  return (\n    <>\n      <Search articles={articles} />\n      {\n        articles.length ? newsList : <Loading />\n      }\n    </>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { Jumbotron } from 'reactstrap'\n\nconst About = () => {\n  return (\n    <>\n      <Jumbotron>\n        <h1 className=\"display-3\">About News App!</h1>\n        <hr className=\"my-2\" />\n      </Jumbotron>\n    </>\n  )\n}\n\nexport default About","import React, { useEffect, useState } from 'react'\n\nimport { Container, Card, CardImg, Breadcrumb, BreadcrumbItem } from 'reactstrap'\n\nimport http from '../services/'\nimport Loading from '../components/Loading';\n\nconst Article = props => {\n  const id = props.match.params.id\n  const [article, setArticle] = useState({})\n\n  const getArticle = async id => {\n    const response = await http.get(`/news/${id}`)\n    setArticle(response.data.article)\n  }\n\n  useEffect(() => {\n    getArticle(id)\n  }, [])\n\n  const renderArticle = () => {\n    const { urlToImage, title, content, author, publishedAt } = article\n    return (\n      <Container className=\"my-5\">\n        <Breadcrumb>\n          <BreadcrumbItem active>{title}</BreadcrumbItem>\n        </Breadcrumb>\n        <Card className=\"my-4\">\n          <CardImg\n            top\n            width=\"100%\"\n            src={urlToImage}\n            alt={title}\n          />\n        </Card>\n        <div className=\"text-white\">\n          <p className=\"text-center\">{content}</p>\n          <p><span>Author:</span> {author}</p>\n          <p><span>Published at:</span> {publishedAt}</p>\n        </div>\n      </Container>\n    )\n  }\n\n  return (\n      article \n        ? renderArticle()\n        : <Loading />\n  )\n}\n\nexport default Article\n","import React from 'react'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport { Container, Col, Row } from 'reactstrap'\n// Views\nimport Home from './views/Home'\nimport About from './views/About'\nimport Article from './views/Article'\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport './App.css'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Container>\n          <Row>\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/home\" exact component={Home} />\n                <Route path=\"/about\" exact component={About} />\n                <Route path=\"/article/:id\" exact component={Article} />\n              </Switch>\n            </Col>\n          </Row>\n        </Container>\n        <Footer />\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}